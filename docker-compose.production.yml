version: '3'

volumes:
  backups:

services:
  nginx:
    ports:
      - "80:80"
      - "443:443"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy=true"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.13
    container_name: circles-letsencrypt
    restart: unless-stopped
    depends_on:
      - nginx
      - gen
    environment:
      - NGINX_PROXY_CONTAINER=circles-nginx-proxy
      - NGINX_DOCKER_GEN_CONTAINER=circles-nginx-gen
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/var/run/docker.sock:ro

  app:
    build:
      context: .
      dockerfile: app/Dockerfile
      args:
        - GIT_COMMIT=fb81503
    container_name: circles-app
    restart: unless-stopped
    environment:
      - GRAPH_NODE_ENDPOINT=${GRAPH_NODE_EXTERNAL}
      - VIRTUAL_HOST=${HOST_APP}
      - LETSENCRYPT_HOST=${HOST_APP}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}

  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    container_name: circles-backup
    restart: unless-stopped
    depends_on:
      - db
    volumes:
      - backups:/data/backups
    environment:
      - CRON_SCHEDULE=0 0 * * *
      - BACKUP_DIR=/data/backups
      - DB_HOST=db
      - DB_PASS=${POSTGRES_PASSWORD}
      - DB_USER=${POSTGRES_USER}
      - DB_NAMES=${POSTGRES_DATABASE_API},${POSTGRES_DATABASE_GRAPH_NODE},${POSTGRES_DATABASE_RELAYER}
      - S3_PATH=s3://${AWS_S3_BACKUP_BUCKET}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

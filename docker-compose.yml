version: "3"

volumes:
  conf:
  data:
  html:
  ipfs:
  vhost.d:

services:
  db:
    image: postgres:12.2-alpine
    container_name: circles-db
    env_file:
      - .env
    volumes:
      - ./db/init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.1-alpine
    container_name: circles-redis

  ganache:
    image: trufflesuite/ganache:latest
    container_name: circles-ganache
    ports:
      - "8545:8545"
    command:
      [
        "--wallet.deterministic",
        "--chain.networkId", "5777",
        "--server.host", "ganache",
        "--wallet.totalAccounts", "10",
        "--wallet.defaultBalance", "10000",
        "--miner.blockGasLimit", "10000000",
      ]

  nginx:
    image: nginx:1.19.1-alpine
    container_name: circles-nginx-proxy
    depends_on:
      - db
    ports:
      - "80:80"
    volumes:
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d

  gen:
    image: jwilder/docker-gen:0.7.5
    container_name: circles-nginx-gen
    depends_on:
      - nginx
    volumes:
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    command: -notify-sighup circles-nginx-proxy -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    container_name: circles-ipfs-node
    ports:
      - "5001:5001"
    volumes:
      - ipfs:/data/ipfs

  graph:
    image: graphprotocol/graph-node:v0.26.0
    container_name: circles-graph-node
    depends_on:
      - db
      - ipfs
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    environment:
      - VIRTUAL_HOST=${HOST_GRAPH_NODE}
      - VIRTUAL_PORT=8000
      - ethereum=${SUBGRAPH_NETWORK}:${ETHEREUM_NODE_ENDPOINT}
      - ipfs=ipfs:5001
      - postgres_db=${POSTGRES_DATABASE_GRAPH_NODE}
      - postgres_host=db
      - postgres_port=5432
      - postgres_pass=${POSTGRES_PASSWORD}
      - postgres_user=${POSTGRES_USER}
      - RUST_BACKTRACE=full

version: '3'

volumes:
  certs:
  conf:
  data:
  html:
  ipfs:
  relayer:
  relayer_html:
  vhost.d:

services:
  db:
    image: postgres:12.2-alpine
    container_name: circles-db
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./db/init-dbs.sh:/docker-entrypoint-initdb.d/init-dbs.sh
      - data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.1-alpine
    container_name: circles-redis
    restart: unless-stopped
    env_file:
      - .env

  nginx:
    image: nginx:1.19.1-alpine
    container_name: circles-nginx-proxy
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "80:80"
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - relayer_html:/usr/share/nginx/html/relayer
      - ./api/nginx.conf:/etc/nginx/vhost.d/${HOST_API}
      - ./app/nginx.conf:/etc/nginx/vhost.d/${HOST_APP}
      - ./relayer/nginx.conf:/etc/nginx/vhost.d/${HOST_RELAYER}

  gen:
    image: jwilder/docker-gen:0.7.0
    container_name: circles-nginx-gen
    restart: unless-stopped
    depends_on:
      - nginx
    volumes:
      - certs:/etc/nginx/certs
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - vhost.d:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    command: -notify-sighup circles-nginx-proxy -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  relayer-service: &relayer-service
    build:
      context: ./relayer
      args:
        - GIT_COMMIT=4bf5354
    container_name: circles-relayer-service
    restart: unless-stopped
    depends_on:
      - db
      - redis
    working_dir: /safe-relay-service
    env_file:
      - .env
    environment:
      - DEPLOY_MASTER_COPY_ON_INIT=0
      - DEPLOY_PROXY_FACTORY_ON_INIT=0
      - VIRTUAL_HOST=${HOST_RELAYER}
      - LETSENCRYPT_HOST=${HOST_RELAYER}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
    volumes:
      - relayer:/nginx
      - relayer_html:/usr/share/nginx/html/relayer
    command: ./run.sh

  relayer-worker: &relayer-worker
    <<: *relayer-service
    container_name: circles-relayer-worker
    depends_on:
      - db
      - redis
      - relayer-service
    command: ./run-worker.sh

  relayer-scheduler:
    <<: *relayer-worker
    container_name: circles-relayer-scheduler
    command: ./run-scheduler.sh

  api: &api
    build:
      context: ./api
      args:
        - GIT_COMMIT=0f2f2b0
    container_name: circles-api
    restart: unless-stopped
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${HOST_API}
      - LETSENCRYPT_HOST=${HOST_API}
      - LETSENCRYPT_EMAIL=${SSL_EMAIL}
    command: ./run.sh

  api-worker:
    <<: *api
    container_name: circles-api-worker
    depends_on:
      - api
    command: ./run-worker.sh

version: '3'

volumes:
  pathfinder:
  relayer:
  relayer_html:

services:
  nginx:
    volumes:
      - relayer_html:/usr/share/nginx/html/relayer
      - ./api/nginx.conf:/etc/nginx/vhost.d/${HOST_API}
      - ./relayer/nginx.conf:/etc/nginx/vhost.d/${HOST_RELAYER}

  relayer-service: &relayer-service
    image: joincircles/safe-relay-service:v4.1.7
    container_name: circles-relayer-service
    depends_on:
      - db
      - ganache
      - redis
    working_dir: /safe-relay-service
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${HOST_RELAYER}
      - GRAPH_NODE_ENDPOINT=http://graph:8000
      - RELAYER_REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - C_FORCE_ROOT=true
      - DJANGO_SECRET_KEY=development
      - DJANGO_SETTINGS_MODULE=config.settings.development
    volumes:
      - relayer:/nginx
      - relayer_html:/usr/share/nginx/html/relayer
    command: ./run.sh

  relayer-worker: &relayer-worker
    <<: *relayer-service
    container_name: circles-relayer-worker
    depends_on:
      - db
      - ganache
      - redis
      - relayer-service
    command: ./run-worker.sh

  relayer-scheduler:
    <<: *relayer-worker
    container_name: circles-relayer-scheduler
    command: ./run-scheduler.sh

  api: &api
    image: joincircles/circles-api:v1.3.2
    container_name: circles-api
    depends_on:
      - db
    env_file:
      - .env
    environment:
      - VIRTUAL_HOST=${HOST_API}
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - API_SERVICE_ENDPOINT=http://api:3000
      - GRAPH_NODE_ENDPOINT=http://graph:8000
      - RELAY_SERVICE_ENDPOINT=http://relayer-service:8888
    volumes:
      - pathfinder:/usr/src/app/edges-data
    command: "npm run serve"

  api-worker:
    <<: *api
    container_name: circles-api-worker
    depends_on:
      - db
      - api
      - graph
    command: "npm run worker:serve"
